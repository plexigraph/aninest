import{_ as e,c as t,o as a,V as n}from"./chunks/framework.FbKWQZfA.js";const k=JSON.parse('{"title":"mountExtension()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Extension/functions/mountExtension.md","filePath":"api/Extension/functions/mountExtension.md"}'),s={name:"api/Extension/functions/mountExtension.md"},i=n('<p><a href="./../../">aninest root</a> / <a href="./../">Extension</a> / mountExtension</p><h1 id="mountextension" tabindex="-1">mountExtension() <a class="header-anchor" href="#mountextension" aria-label="Permalink to &quot;mountExtension()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> mountExtension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">extension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> unmount</span></span></code></pre></div><p>A function that mounts an extension to the animation.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/RecursiveAnimatable.html"><code>RecursiveAnimatable</code></a>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>extension</strong>: <a href="./../type-aliases/Extension.html"><code>Extension</code></a>&lt;<code>Animating</code>&gt;</p><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/unmount.html"><code>unmount</code></a></p><p>A function that unmounts an extension from the animation.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/efdac3830228dc951d7e8e69ab0c7db89aa8723f/core/src/Animate/Extension.ts#L37" target="_blank" rel="noreferrer">Animate/Extension.ts:37</a></p>',14),o=[i];function r(h,l,p,d,c,m){return a(),t("div",null,o)}const E=e(s,[["render",r]]);export{k as __pageData,E as default};
