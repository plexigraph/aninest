import{_ as a,c as e,o as t,V as n}from"./chunks/framework.FbKWQZfA.js";const k=JSON.parse('{"title":"Mount()<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"api/Extension/type-aliases/Mount.md","filePath":"api/Extension/type-aliases/Mount.md"}'),i={name:"api/Extension/type-aliases/Mount.md"},s=n('<p><a href="./../../">aninest root</a> / <a href="./../">Extension</a> / Mount</p><h1 id="mount-animating" tabindex="-1">Mount()&lt;Animating&gt; <a class="header-anchor" href="#mount-animating" aria-label="Permalink to &quot;Mount()\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Mount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;: (anim) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">unmount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>A function that mounts an extension to the animation.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/UnknownRecursiveAnimatable.html"><code>UnknownRecursiveAnimatable</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./unmount.html"><code>unmount</code></a></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/8c5d5cec878cb0688cbcb852e4de66105e356f88/core/src/Animate/Extension.ts#L21" target="_blank" rel="noreferrer">Animate/Extension.ts:21</a></p>',12),r=[s];function o(l,h,p,d,c,m){return t(),e("div",null,r)}const g=a(i,[["render",o]]);export{k as __pageData,g as default};
