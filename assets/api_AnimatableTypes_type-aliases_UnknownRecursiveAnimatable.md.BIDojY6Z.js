import{_ as e,c as a,o as n,V as i}from"./chunks/framework.FbKWQZfA.js";const b=JSON.parse('{"title":"UnknownRecursiveAnimatable","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/UnknownRecursiveAnimatable.md","filePath":"api/AnimatableTypes/type-aliases/UnknownRecursiveAnimatable.md"}'),s={name:"api/AnimatableTypes/type-aliases/UnknownRecursiveAnimatable.md"},t=i('<p><a href="./../../">aninest root</a> / <a href="./../">AnimatableTypes</a> / UnknownRecursiveAnimatable</p><h1 id="unknownrecursiveanimatable" tabindex="-1">UnknownRecursiveAnimatable <a class="header-anchor" href="#unknownrecursiveanimatable" aria-label="Permalink to &quot;UnknownRecursiveAnimatable&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> UnknownRecursiveAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: RecursiveAnimatable&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">unknown</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Convenient way to write <code>RecursiveAnimatable&lt;unknown&gt;</code>, usually used to extend a generic type.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/638398f3759b1c9c8747db3d93d805b9d84d9bf5/core/src/Animate/AnimatableTypes.ts#L33" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:33</a></p>',6),l=[t];function r(o,c,p,d,h,k){return n(),a("div",null,l)}const u=e(s,[["render",r]]);export{b as __pageData,u as default};
