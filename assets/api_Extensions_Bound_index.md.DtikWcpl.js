import{_ as t,c as e,o as a,V as n}from"./chunks/framework.BwUCzv35.js";const f=JSON.parse('{"title":"Extensions/Bound","description":"","frontmatter":{},"headers":[],"relativePath":"api/Extensions/Bound/index.md","filePath":"api/Extensions/Bound/index.md"}'),o={name:"api/Extensions/Bound/index.md"},s=n('<p><a href="./../../">aninest</a> / Extensions/Bound</p><h1 id="extensions-bound" tabindex="-1">Extensions/Bound <a class="header-anchor" href="#extensions-bound" aria-label="Permalink to &quot;Extensions/Bound&quot;">​</a></h1><p>Adds bounds to an animation to ensure an animation will end within the given bounds.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Type alias</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./type-aliases/Bounds.html">Bounds</a></td><td style="text-align:left;">The bounds of the animation, which means that all values within<br>the bounds are optional, including the the <code>upper</code> and <code>lower</code> objects.<br>The animation will be loosely clamped to these bounds.</td></tr><tr><td style="text-align:left;"><a href="./type-aliases/BoundsLayer.html">BoundsLayer</a></td><td style="text-align:left;">A layer used to enforce minimum and maximum bounds on an animation.</td></tr></tbody></table><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Function</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./functions/setupBoundsLayer.html">setupBoundsLayer</a></td><td style="text-align:left;">Sets up a bounds layer for an animation.<br>Allows for the animation&#39;s bounds to be dynamically changed.</td></tr></tbody></table>',8),i=[s];function d(l,r,h,u,c,x){return a(),e("div",null,i)}const b=t(o,[["render",d]]);export{f as __pageData,b as default};
