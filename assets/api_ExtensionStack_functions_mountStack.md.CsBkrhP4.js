import{_ as a,c as t,o as e,V as s}from"./chunks/framework.FbKWQZfA.js";const u=JSON.parse('{"title":"mountStack()","description":"","frontmatter":{},"headers":[],"relativePath":"api/ExtensionStack/functions/mountStack.md","filePath":"api/ExtensionStack/functions/mountStack.md"}'),n={name:"api/ExtensionStack/functions/mountStack.md"},i=s('<p><a href="./../../">aninest</a> / <a href="./../">ExtensionStack</a> / mountStack</p><h1 id="mountstack" tabindex="-1">mountStack() <a class="header-anchor" href="#mountstack" aria-label="Permalink to &quot;mountStack()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> mountStack</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">stack</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> unmount</span></span></code></pre></div><p>Mounts a stack of extensions to the animation. Returns a function that unmounts all the extensions in the stack.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/RecursiveAnimatable.html"><code>RecursiveAnimatable</code></a>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>stack</strong>: <a href="./../type-aliases/ExtensionStack.html"><code>ExtensionStack</code></a>&lt;<code>Animating</code>&gt;</p><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../../Extension/type-aliases/unmount.html"><code>unmount</code></a></p><p>A function that unmounts all the extensions in the stack.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/988b5e8ac7585d70f507e793229537041ab3eea8/core/src/Animate/ExtensionStack.ts#L63" target="_blank" rel="noreferrer">Animate/ExtensionStack.ts:63</a></p>',14),o=[i];function r(c,h,l,p,d,k){return e(),t("div",null,o)}const f=a(n,[["render",r]]);export{u as __pageData,f as default};
