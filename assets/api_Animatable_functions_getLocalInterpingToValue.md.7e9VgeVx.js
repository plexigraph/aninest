import{_ as a,c as e,o as i,V as t}from"./chunks/framework.FbKWQZfA.js";const m=JSON.parse('{"title":"getLocalInterpingToValue()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/functions/getLocalInterpingToValue.md","filePath":"api/Animatable/functions/getLocalInterpingToValue.md"}'),s={name:"api/Animatable/functions/getLocalInterpingToValue.md"},n=t('<p><a href="./../../">aninest root</a> / <a href="./../">Animatable</a> / getLocalInterpingToValue</p><h1 id="getlocalinterpingtovalue" tabindex="-1">getLocalInterpingToValue() <a class="header-anchor" href="#getlocalinterpingtovalue" aria-label="Permalink to &quot;getLocalInterpingToValue()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> getLocalInterpingToValue</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Key</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">key</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> LocalAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;[</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Key</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">] </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">|</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> undefined</span></span></code></pre></div><p>Gets a value</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/LocalAnimatable.html"><code>LocalAnimatable</code></a>&lt;<a href="./../../AnimatableTypes/type-aliases/RecursiveAnimatable.html"><code>RecursiveAnimatable</code></a>&lt;<code>unknown</code>&gt;&gt;</p><p>• <strong>Key</strong> <em>extends</em> <code>string</code> | <code>number</code> | <code>symbol</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>• <strong>key</strong>: <code>Key</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../../AnimatableTypes/type-aliases/LocalAnimatable.html"><code>LocalAnimatable</code></a>&lt;<code>Animating</code>&gt;[<code>Key</code>] | <code>undefined</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/d50161951d4f465f51de908f1a87b6b592f42f48/core/src/Animate/Animatable.ts#L594" target="_blank" rel="noreferrer">Animate/Animatable.ts:594</a></p>',14),l=[n];function r(o,h,p,d,c,k){return i(),e("div",null,l)}const A=a(s,[["render",r]]);export{m as __pageData,A as default};
