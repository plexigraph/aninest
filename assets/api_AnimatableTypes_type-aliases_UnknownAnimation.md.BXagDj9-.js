import{_ as n,c as a,o as e,V as i}from"./chunks/framework.FbKWQZfA.js";const A=JSON.parse('{"title":"UnknownAnimation","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md","filePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md"}'),t={name:"api/AnimatableTypes/type-aliases/UnknownAnimation.md"},s=i('<p><a href="./../../">aninest</a> / <a href="./../">AnimatableTypes</a> / UnknownAnimation</p><h1 id="unknownanimation" tabindex="-1">UnknownAnimation <a class="header-anchor" href="#unknownanimation" aria-label="Permalink to &quot;UnknownAnimation&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> UnknownAnimation</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: Animation&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">UnknownRecursiveAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Convenient way to write <code>UnknownAnimation</code>. Usually used to cast an animation to this more generic type.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/faa26c191e539bfffb0686de3335249d40ae5db1/core/src/Animate/AnimatableTypes.ts#L38" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:38</a></p>',6),o=[s];function l(p,r,d,c,h,m){return e(),a("div",null,o)}const _=n(t,[["render",l]]);export{A as __pageData,_ as default};
