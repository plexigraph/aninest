import{_ as a,c as s,o as i,V as e}from"./chunks/framework.FbKWQZfA.js";const y=JSON.parse('{"title":"Animatable","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/Animatable.md","filePath":"api/AnimatableTypes/type-aliases/Animatable.md"}'),t={name:"api/AnimatableTypes/type-aliases/Animatable.md"},n=e(`<p><a href="./../../">aninest root</a> / <a href="./../">AnimatableTypes</a> / Animatable</p><h1 id="animatable" tabindex="-1">Animatable <a class="header-anchor" href="#animatable" aria-label="Permalink to &quot;Animatable&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Animatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: object;</span></span></code></pre></div><p>The local state of the animation, meaning only the numbers in the topmost level of the animation.</p><h2 id="index-signature" tabindex="-1">Index Signature <a class="header-anchor" href="#index-signature" aria-label="Permalink to &quot;Index Signature&quot;">​</a></h2><p>[<code>key</code>: <code>string</code>]: <code>number</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> startingState</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> {a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, y: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}, b: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}</span></span>
<span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// Looking at the root level:</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">{</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">b</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}</span></span>
<span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// Looking at the &#39;a&#39; child:</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">{ </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">x</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">y</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> }</span></span></code></pre></div><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/8c5d5cec878cb0688cbcb852e4de66105e356f88/core/src/Animate/AnimatableTypes.ts#L22" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:22</a></p>`,10),l=[n];function h(p,k,r,d,o,c){return i(),s("div",null,l)}const g=a(t,[["render",h]]);export{y as __pageData,g as default};
