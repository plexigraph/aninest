import{_ as a,c as n,o as e,V as t}from"./chunks/framework.BwUCzv35.js";const A=JSON.parse('{"title":"UnknownAnimation","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md","filePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md"}'),i={name:"api/AnimatableTypes/type-aliases/UnknownAnimation.md"},s=t('<p><a href="./../../">aninest</a> / <a href="./../">AnimatableTypes</a> / UnknownAnimation</p><h1 id="unknownanimation" tabindex="-1">UnknownAnimation <a class="header-anchor" href="#unknownanimation" aria-label="Permalink to &quot;UnknownAnimation&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> UnknownAnimation</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: Animation&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">UnknownRecursiveAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Convenient way to write <code>Animation&lt;UnknownRecursiveAnimatable&gt;</code>. Usually used to cast an animation to this more generic type.</p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/f1bf3a3/src/Animate/AnimatableTypes.ts#L38" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:38</a></p>',6),o=[s];function l(r,p,c,h,m,k){return e(),n("div",null,o)}const _=a(i,[["render",l]]);export{A as __pageData,_ as default};
