import{_ as t,c as e,o as a,V as o}from"./chunks/framework.BwUCzv35.js";const m=JSON.parse('{"title":"Extensions/Loop","description":"","frontmatter":{},"headers":[],"relativePath":"api/Extensions/Loop/index.md","filePath":"api/Extensions/Loop/index.md"}'),n={name:"api/Extensions/Loop/index.md"},i=o('<p><a href="./../../">aninest</a> / Extensions/Loop</p><h1 id="extensions-loop" tabindex="-1">Extensions/Loop <a class="header-anchor" href="#extensions-loop" aria-label="Permalink to &quot;Extensions/Loop&quot;">​</a></h1><p>Extension to loop an animation in a saw-like wave: <code>/|/|</code></p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="helpers" tabindex="-1">Helpers <a class="header-anchor" href="#helpers" aria-label="Permalink to &quot;Helpers&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Function</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./functions/loopAnimation.html">loopAnimation</a></td><td style="text-align:left;">Will loop the animation, meaning that it will loop from the initial state to the target state and jump back to the initial state.</td></tr></tbody></table>',6),s=[i];function l(r,d,p,h,c,x){return a(),e("div",null,s)}const f=t(n,[["render",l]]);export{m as __pageData,f as default};
