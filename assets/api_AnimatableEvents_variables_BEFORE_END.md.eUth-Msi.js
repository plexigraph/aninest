import{_ as a,c as e,o as t,V as s}from"./chunks/framework.FbKWQZfA.js";const f=JSON.parse('{"title":"BEFORE_END","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableEvents/variables/BEFORE_END.md","filePath":"api/AnimatableEvents/variables/BEFORE_END.md"}'),i={name:"api/AnimatableEvents/variables/BEFORE_END.md"},n=s('<p><a href="./../../">aninest root</a> / <a href="./../">AnimatableEvents</a> / BEFORE_END</p><h1 id="before-end" tabindex="-1">BEFORE_END <a class="header-anchor" href="#before-end" aria-label="Permalink to &quot;BEFORE\\_END&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> BEFORE_END</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;"> &quot;beforeEnd&quot;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;"> &quot;beforeEnd&quot;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Broadcasts right before the animation ends to allow for the animation to be interrupted before it ends. This is useful to create snapping, looping, or bouncing animations without triggering any <a href="./END.html">END</a> events.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/d50161951d4f465f51de908f1a87b6b592f42f48/core/src/Animate/AnimatableEvents.ts#L52" target="_blank" rel="noreferrer">Animate/AnimatableEvents.ts:52</a></p>',6),r=[n];function o(l,h,d,p,E,c){return t(),e("div",null,r)}const b=a(i,[["render",o]]);export{f as __pageData,b as default};
