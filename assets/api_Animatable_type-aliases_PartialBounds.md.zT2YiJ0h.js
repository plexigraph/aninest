import{_ as a,c as s,o as i,V as t}from"./chunks/framework.DrfrbPSH.js";const u=JSON.parse('{"title":"PartialBounds<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/type-aliases/PartialBounds.md","filePath":"api/Animatable/type-aliases/PartialBounds.md"}'),e={name:"api/Animatable/type-aliases/PartialBounds.md"},n=t(`<p><a href="./../../">aninest</a> / <a href="./../">Animatable</a> / PartialBounds</p><h1 id="partialbounds-t" tabindex="-1">PartialBounds&lt;T&gt; <a class="header-anchor" href="#partialbounds-t" aria-label="Permalink to &quot;PartialBounds\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> PartialBounds</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;: Partial&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Bounds</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;&gt;;</span></span></code></pre></div><p>The partial bounds of the animation, making the lower and upper bounds optional.</p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./Bounds.html">Bounds</a> for the full bounds type and for further explanation of the bounds.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// Assuming the animation is of type {a: Vec2, b: Vec2}:</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> bounds</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> {</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> lower: { a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, y: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}, b: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">} },</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">} </span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// Note that there are no upper bounds</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/df0807b/src/Animate/Animatable.ts#L52" target="_blank" rel="noreferrer">Animate/Animatable.ts:52</a></p>`,12),l=[n];function h(p,r,o,d,k,c){return i(),s("div",null,l)}const g=a(e,[["render",h]]);export{u as __pageData,g as default};
