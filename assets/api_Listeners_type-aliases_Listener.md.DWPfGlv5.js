import{_ as s,c as a,o as i,V as e}from"./chunks/framework.BwUCzv35.js";const g=JSON.parse('{"title":"Listener<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/Listeners/type-aliases/Listener.md","filePath":"api/Listeners/type-aliases/Listener.md"}'),t={name:"api/Listeners/type-aliases/Listener.md"},n=e(`<p><a href="./../../">aninest</a> / <a href="./../">Listeners</a> / Listener</p><h1 id="listener-t" tabindex="-1">Listener&lt;T&gt; <a class="header-anchor" href="#listener-t" aria-label="Permalink to &quot;Listener\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Listener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;: (currentLocalState) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">boolean</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> |</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> void</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> |</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Promise</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>A listener function that is called when an event is broadcast.</p><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>The listener can return <code>true</code> to remove itself from the listener set, <code>false</code> to keep itself in the listener set, or <code>void</code> to keep itself in the listener set.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">() </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;"> true</span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;"> // remove listener</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">() </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;"> false</span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;"> // keep listener</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">() </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> {} </span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// keep listener</span></span></code></pre></div><h2 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">({</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">a</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">b</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> console</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">log</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">a</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">b</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>currentLocalState</strong>: <code>T</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code> | <code>void</code> | <code>Promise</code>&lt;<code>void</code>&gt;</p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/9544357/src/Listeners.ts#L15" target="_blank" rel="noreferrer">Listeners.ts:15</a></p>`,18),l=[n];function h(r,p,k,o,d,c){return i(),a("div",null,l)}const y=s(t,[["render",h]]);export{g as __pageData,y as default};
