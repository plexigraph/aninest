import{_ as s,c as i,o as a,V as t}from"./chunks/framework.FbKWQZfA.js";const F=JSON.parse('{"title":"restrictFromFunctionExtension()","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Restrict/functions/restrictFromFunctionExtension.md","filePath":"extensions/Restrict/functions/restrictFromFunctionExtension.md"}'),n={name:"extensions/Restrict/functions/restrictFromFunctionExtension.md"},e=t(`<p><a href="./../../">@aninest/extensions</a> / <a href="./../">Restrict</a> / restrictFromFunctionExtension</p><h1 id="restrictfromfunctionextension" tabindex="-1">restrictFromFunctionExtension() <a class="header-anchor" href="#restrictfromfunctionextension" aria-label="Permalink to &quot;restrictFromFunctionExtension()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> restrictFromFunctionExtension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">restriction</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Extension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <code>RecursiveAnimatable</code>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>restriction</strong></p><p>A function which takes in a proxy to the local animation state which you can directly set to in order to collapse the allowed state of the animation.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Extension</code>&lt;<code>Animating</code>&gt;</p><p>an extension which calls the restriction function</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> restrictToWholeNumbersExtension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">() {</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> return</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> restrictFromFunctionExtension</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">local</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =&gt;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> {</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">   for</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> (</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> key</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> in</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> local</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">local</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">[</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">key</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">] </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> Math</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">round</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">local</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">[</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">key</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">])</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> })</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> *</span></span></code></pre></div><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/efdac3830228dc951d7e8e69ab0c7db89aa8723f/extensions/src/restrict.ts#L51" target="_blank" rel="noreferrer">../../extensions/src/restrict.ts:51</a></p>`,15),r=[e];function h(l,p,o,k,c,d){return a(),i("div",null,r)}const g=s(n,[["render",h]]);export{F as __pageData,g as default};
