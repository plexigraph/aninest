import{_ as e,c as a,o as t,V as n}from"./chunks/framework.BwUCzv35.js";const u=JSON.parse('{"title":"AnimatableEvents","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/type-aliases/AnimatableEvents.md","filePath":"api/Animatable/type-aliases/AnimatableEvents.md"}'),i={name:"api/Animatable/type-aliases/AnimatableEvents.md"},s=n('<p><a href="./../../">aninest</a> / <a href="./../">Animatable</a> / AnimatableEvents</p><h1 id="animatableevents" tabindex="-1">AnimatableEvents <a class="header-anchor" href="#animatableevents" aria-label="Permalink to &quot;AnimatableEvents&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> AnimatableEvents</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: AnimatableEventsWithValue | &quot;update&quot;;</span></span></code></pre></div><p>The various event types that are emitted by the animation. Here are the possible events:</p><ul><li><strong>start</strong>: when the animation&#39;s target state is changed by calling <a href="./../functions/modifyTo.html">modifyTo</a> and the new state is different from the current state. Returns a <a href="./LocalAnimatable.html">PartialAnimatable</a> of the new local state with only the changed values.</li><li><strong>end</strong>: when the animation fully comes to a stop, provides the resting state Returns an <a href="./LocalAnimatable.html">Animatable</a> of the new local state with the final resting state.</li><li><strong>beforeEnd</strong>: when the animation is about to end Useful for preventing the animation from ending to instead loop/bounce/snap etc.</li><li><strong>bounce</strong>: when the animation bounces off a bound Returns a <a href="./LocalAnimatable.html">PartialAnimatable</a> of the new local state with only the bounced values.</li><li><strong>interrupt</strong>: when a new <code>modifyTo</code> is called before the animation is finished Returns a <a href="./LocalAnimatable.html">PartialAnimatable</a> of the new local state with all of the currently in progress values.</li><li><strong>update</strong>: when the animation is updated Returns <code>undefined</code></li></ul><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/3be3895/src/Animate/Animatable.ts#L82" target="_blank" rel="noreferrer">Animate/Animatable.ts:82</a></p>',7),l=[s];function o(r,h,c,m,d,p){return t(),a("div",null,l)}const f=e(i,[["render",o]]);export{u as __pageData,f as default};
