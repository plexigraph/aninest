import{_ as a,c as e,o as s,V as t}from"./chunks/framework.FbKWQZfA.js";const m=JSON.parse('{"title":"BoundsLayer<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Bound/type-aliases/BoundsLayer.md","filePath":"extensions/Bound/type-aliases/BoundsLayer.md"}'),i={name:"extensions/Bound/type-aliases/BoundsLayer.md"},n=t('<p><a href="./../../">@aninest/extensions</a> / <a href="./../">Bound</a> / BoundsLayer</p><h1 id="boundslayer-animating" tabindex="-1">BoundsLayer&lt;Animating&gt; <a class="header-anchor" href="#boundslayer-animating" aria-label="Permalink to &quot;BoundsLayer\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> BoundsLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;: object &amp; Layer&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>A layer used to enforce minimum and maximum bounds on an animation.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="update" tabindex="-1">update() <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">update</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">bounds</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> |</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;"> undefined</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>bounds</strong>: <code>PartialFullBounds</code>&lt;<code>PartialRecursiveAnimatable</code>&lt;<code>Animating</code>&gt;&gt;</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code> | <code>undefined</code></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <code>UnknownRecursiveAnimatable</code></p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./../functions/setupBoundsLayer.html">setupBoundsLayer</a> for how to create a BoundsLayer.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/0970e35cce1ccab01b8ce4df8a59f00baff5cfda/extensions/src/bound.ts#L211" target="_blank" rel="noreferrer">../../extensions/src/bound.ts:211</a></p>',17),r=[n];function o(d,l,h,p,c,u){return s(),e("div",null,r)}const y=a(i,[["render",o]]);export{m as __pageData,y as default};
