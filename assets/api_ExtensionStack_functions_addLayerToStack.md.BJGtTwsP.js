import{_ as a,c as e,o as t,V as s}from"./chunks/framework.FbKWQZfA.js";const m=JSON.parse('{"title":"addLayerToStack()","description":"","frontmatter":{},"headers":[],"relativePath":"api/ExtensionStack/functions/addLayerToStack.md","filePath":"api/ExtensionStack/functions/addLayerToStack.md"}'),i={name:"api/ExtensionStack/functions/addLayerToStack.md"},n=s('<p><a href="./../../">aninest root</a> / <a href="./../">ExtensionStack</a> / addLayerToStack</p><h1 id="addlayertostack" tabindex="-1">addLayerToStack() <a class="header-anchor" href="#addlayertostack" aria-label="Permalink to &quot;addLayerToStack()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> addLayerToStack</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">L</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">stack</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">layer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> L</span></span></code></pre></div><p>A passthrough function that adds a layer to the stack and returns the layer.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/RecursiveAnimatable.html"><code>RecursiveAnimatable</code></a>&lt;<code>unknown</code>&gt;</p><p>• <strong>L</strong> <em>extends</em> <a href="./../../Extension/type-aliases/Layer.html"><code>Layer</code></a>&lt;<code>Animating</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>stack</strong>: <a href="./../type-aliases/ExtensionStack.html"><code>ExtensionStack</code></a>&lt;<code>Animating</code>&gt;</p><p>• <strong>layer</strong>: <code>L</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>L</code></p><p>the inputted layer</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/638398f3759b1c9c8747db3d93d805b9d84d9bf5/core/src/Animate/ExtensionStack.ts#L46" target="_blank" rel="noreferrer">Animate/ExtensionStack.ts:46</a></p>',15),r=[n];function o(d,h,c,l,p,k){return t(),e("div",null,r)}const g=a(i,[["render",o]]);export{m as __pageData,g as default};
