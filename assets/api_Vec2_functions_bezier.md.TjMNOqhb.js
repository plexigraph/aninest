import{_ as e,c as a,o as s,V as t}from"./chunks/framework.BwUCzv35.js";const u=JSON.parse('{"title":"bezier()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Vec2/functions/bezier.md","filePath":"api/Vec2/functions/bezier.md"}'),i={name:"api/Vec2/functions/bezier.md"},n=t(`<p><a href="./../../">aninest</a> / <a href="./../">Vec2</a> / bezier</p><h1 id="bezier" tabindex="-1">bezier() <a class="header-anchor" href="#bezier" aria-label="Permalink to &quot;bezier()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">bezier</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   v1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   v2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   p1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   p2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   time</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">): </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">Vec2</span></span></code></pre></div><p>Performs a bezier interpolation between two vectors by a time value.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>v1</strong>: <a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><p>The start vector.</p><p>• <strong>v2</strong>: <a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><p>The end vector.</p><p>• <strong>p1</strong>: <a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><p>Control point 1.</p><p>• <strong>p2</strong>: <a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><p>Control point 2.</p><p>• <strong>time</strong>: <code>number</code></p><p>The time value to interpolate by (should be between 0 and 1).</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><p>A new vector.</p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/3be3895/src/Utils/vec2.ts#L232" target="_blank" rel="noreferrer">Utils/vec2.ts:232</a></p>`,20),r=[n];function p(l,o,h,c,d,k){return s(),a("div",null,r)}const m=e(i,[["render",p]]);export{u as __pageData,m as default};
